generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Repository {
  id        BigInt   @id
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  commits        Commit[]
  reviewComments ReviewComment[]
}

model Review {
  id        BigInt   @id @default(autoincrement())
  ref       String
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  reviewComments ReviewComment[]
}

model ReviewComment {
  id           Int        @id @default(autoincrement())
  commentId    BigInt     @unique
  comment      String
  fileName     String
  extension    String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
  reviewId     BigInt
  review       Review     @relation(fields: [reviewId], references: [id])
  repository   Repository @relation(fields: [repositoryId], references: [id])
  repositoryId BigInt
}

model Commit {
  id           Int        @id @default(autoincrement())
  pushId       BigInt
  ref          String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
  sha          String     @unique
  repository   Repository @relation(fields: [repositoryId], references: [id])
  repositoryId BigInt

  changes CommitChange[]

  @@index([pushId])
  @@map("commits")
}

model CommitChange {
  id        Int      @id @default(autoincrement())
  commitId  Int
  fileName  String
  extension String?
  additions Int
  deletions Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  commit Commit @relation(fields: [commitId], references: [id])
}
